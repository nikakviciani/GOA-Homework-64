/* 1) შექმენით 1 container დივი, რომელშიც შექმნით 5 .box კლასის მქონე div-ს, შემდეგ ეს .box კალსის მქონე დივები განალაგეთ flexbox-ად. შემდეგ მათ შორის აიღეთ 30px დაშორება, flex-ის მიმართულება უნდა იყოს row, ელემენტები ჰოროზონტალურად განალგეთ flex-end-ზე, ხოლო ვერტიკალურად განალაგეთ ცენტრში, ასევე ისინი თუ ვერ დაეტევიან კონკრერტულ რიგში, გაუწერეთ flex-wrap რომ შეძლონ შემდეგ რიგებზე გადასვლა. ასევე თუ მოწყობლიობის ზომა მცირეა და ელემენტები ვერ ეტევიან რიგზე, მაშინ მათი ზომა შემცირდეს 1-ით, ხოლო თუ შესაძებლია რომ გაიზარდონ ყველა div-ი გარდა პირველისა გაიზრდოს 1-ის კოეფციენტით ხოლო პირველი გაიზარდოს 2-ით */
.container {
    display: flex; /* ქმნის flex განლაგებას */
    flex-direction: row; /* მართავს flex-ის მიმართუელბას */

    justify-content: flex-end; /* მართავს ელემენტების პოზიციას მთავარ ღერძე  */
    align-items: center; /* მართავს ელემენტების განლაგებას გადამკვეთ ღერძე  */
    
    flex-wrap: wrap; /* ელემენტებს შეუძლიათ შემდეგ რიგზე გადასვლა თუ ვერ ეტევიან რიგში (შეცვლილ ღერზებზეც მუშაობს) */
    
    gap: 30px; /* ელემენტებს შორის დაშორებების შექმნა (არ ითვლება არც მარგინად და არც პადდინგად) */
    
    border: 10px solid gray;
    height: 600px;
}
.box {
    flex-shrink: 1; /* ელემენტის ზომის შემცირება, თუ ვერ ეტევა კონტეინერში */
    flex-grow: 1; /* ელემენტის ზომის გაზრდა, თუ მშობელ კონტეინერს აქვს დიდი სივრცე */
    height: 200px;
    width: 200px;

    background-color: rgb(17, 95, 196);
    font-size: 40px;

    border: 5px solid white;
    border-radius: 10px;

    display: flex;
    justify-content: center;
    align-items: center;
}